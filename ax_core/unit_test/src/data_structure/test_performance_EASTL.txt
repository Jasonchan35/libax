func, type, size, loop, ax, stl, diff
array_append        ,      int_value, size=1 x 10000000    ax=   0.150, stl=   0.828, diff=   0.678 (  81.842% faster)
array_append        ,      int_value, size=10 x 1000000    ax=   0.044, stl=   0.794, diff=   0.749 (  94.397% faster)
array_append        ,      int_value, size=100 x 100000    ax=   0.027, stl=   0.162, diff=   0.136 (  83.524% faster)
array_append        ,      int_value, size=1000 x 10000    ax=   0.037, stl=   0.044, diff=   0.007 (  16.693% faster)
array_append        ,      int_value, size=10000 x 1000    ax=   0.035, stl=   0.032, diff=  -0.003 (  -9.652% faster)
array_append        ,      int_value, size=100000 x 100    ax=   0.037, stl=   0.030, diff=  -0.007 ( -22.719% faster)
array_append        ,      int_value, size=1000000 x 10    ax=   0.086, stl=   0.058, diff=  -0.028 ( -47.888% faster)
array_append        ,      int_value, size=10000000 x 1    ax=   0.123, stl=   0.098, diff=  -0.025 ( -25.832% faster)

reserve_array_append,      int_value, size=1 x 10000000    ax=   0.151, stl=   0.762, diff=   0.611 (  80.211% faster)
reserve_array_append,      int_value, size=10 x 1000000    ax=   0.036, stl=   0.101, diff=   0.065 (  63.973% faster)
reserve_array_append,      int_value, size=100 x 100000    ax=   0.025, stl=   0.038, diff=   0.013 (  33.771% faster)
reserve_array_append,      int_value, size=1000 x 10000    ax=   0.025, stl=   0.025, diff=  -0.001 (  -3.646% faster)
reserve_array_append,      int_value, size=10000 x 1000    ax=   0.024, stl=   0.024, diff=  -0.000 (  -1.297% faster)
reserve_array_append,      int_value, size=100000 x 100    ax=   0.024, stl=   0.024, diff=  -0.000 (  -0.988% faster)
reserve_array_append,      int_value, size=1000000 x 10    ax=   0.039, stl=   0.035, diff=  -0.003 (  -9.290% faster)
reserve_array_append,      int_value, size=10000000 x 1    ax=   0.039, stl=   0.038, diff=  -0.001 (  -2.208% faster)

array_insert        ,      int_value, size=1 x 100000    ax=   0.002, stl=   0.009, diff=   0.007 (  81.745% faster)
array_insert        ,      int_value, size=10 x 10000    ax=   0.002, stl=   0.010, diff=   0.008 (  80.477% faster)
array_insert        ,      int_value, size=100 x 1000    ax=   0.005, stl=   0.007, diff=   0.003 (  35.824% faster)
array_insert        ,      int_value, size=1000 x 100    ax=   0.026, stl=   0.029, diff=   0.003 (  10.015% faster)
array_insert        ,      int_value, size=10000 x 10    ax=   0.269, stl=   0.263, diff=  -0.005 (  -2.011% faster)
array_insert        ,      int_value, size=100000 x 1    ax=   2.949, stl=   2.948, diff=  -0.001 (  -0.019% faster)

reserve_array_insert,      int_value, size=1 x 100000    ax=   0.002, stl=   0.008, diff=   0.006 (  79.182% faster)
reserve_array_insert,      int_value, size=10 x 10000    ax=   0.002, stl=   0.003, diff=   0.001 (  39.296% faster)
reserve_array_insert,      int_value, size=100 x 1000    ax=   0.005, stl=   0.006, diff=   0.001 (  15.122% faster)
reserve_array_insert,      int_value, size=1000 x 100    ax=   0.030, stl=   0.030, diff=   0.001 (   1.988% faster)
reserve_array_insert,      int_value, size=10000 x 10    ax=   0.262, stl=   0.263, diff=   0.001 (   0.366% faster)
reserve_array_insert,      int_value, size=100000 x 1    ax=   2.952, stl=   2.952, diff=   0.000 (   0.010% faster)

array_append        ,     vec3_value, size=1 x 10000000    ax=   0.154, stl=   0.679, diff=   0.525 (  77.318% faster)
array_append        ,     vec3_value, size=10 x 1000000    ax=   0.052, stl=   0.768, diff=   0.717 (  93.259% faster)
array_append        ,     vec3_value, size=100 x 100000    ax=   0.035, stl=   0.186, diff=   0.151 (  81.296% faster)
array_append        ,     vec3_value, size=1000 x 10000    ax=   0.053, stl=   0.070, diff=   0.017 (  24.600% faster)
array_append        ,     vec3_value, size=10000 x 1000    ax=   0.064, stl=   0.084, diff=   0.020 (  24.238% faster)
array_append        ,     vec3_value, size=100000 x 100    ax=   0.171, stl=   0.082, diff=  -0.089 (-108.556% faster)
array_append        ,     vec3_value, size=1000000 x 10    ax=   0.380, stl=   0.216, diff=  -0.165 ( -76.486% faster)
array_append        ,     vec3_value, size=10000000 x 1    ax=   0.541, stl=   0.359, diff=  -0.182 ( -50.856% faster)

reserve_array_append,     vec3_value, size=1 x 10000000    ax=   0.160, stl=   0.710, diff=   0.549 (  77.389% faster)
reserve_array_append,     vec3_value, size=10 x 1000000    ax=   0.052, stl=   0.097, diff=   0.045 (  46.225% faster)
reserve_array_append,     vec3_value, size=100 x 100000    ax=   0.035, stl=   0.048, diff=   0.013 (  26.112% faster)
reserve_array_append,     vec3_value, size=1000 x 10000    ax=   0.034, stl=   0.032, diff=  -0.001 (  -3.854% faster)
reserve_array_append,     vec3_value, size=10000 x 1000    ax=   0.031, stl=   0.036, diff=   0.005 (  13.356% faster)
reserve_array_append,     vec3_value, size=100000 x 100    ax=   0.032, stl=   0.036, diff=   0.004 (  11.834% faster)
reserve_array_append,     vec3_value, size=1000000 x 10    ax=   0.098, stl=   0.096, diff=  -0.002 (  -1.763% faster)
reserve_array_append,     vec3_value, size=10000000 x 1    ax=   0.090, stl=   0.088, diff=  -0.002 (  -2.699% faster)

array_insert        ,     vec3_value, size=1 x 100000    ax=   0.002, stl=   0.007, diff=   0.006 (  77.981% faster)
array_insert        ,     vec3_value, size=10 x 10000    ax=   0.003, stl=   0.009, diff=   0.006 (  67.392% faster)
array_insert        ,     vec3_value, size=100 x 1000    ax=   0.010, stl=   0.012, diff=   0.003 (  22.146% faster)
array_insert        ,     vec3_value, size=1000 x 100    ax=   0.077, stl=   0.078, diff=   0.001 (   0.793% faster)
array_insert        ,     vec3_value, size=10000 x 10    ax=   0.903, stl=   0.873, diff=  -0.030 (  -3.469% faster)
array_insert        ,     vec3_value, size=100000 x 1    ax=   9.145, stl=   8.825, diff=  -0.320 (  -3.631% faster)

reserve_array_insert,     vec3_value, size=1 x 100000    ax=   0.002, stl=   0.007, diff=   0.006 (  78.361% faster)
reserve_array_insert,     vec3_value, size=10 x 10000    ax=   0.003, stl=   0.003, diff=  -0.000 (  -7.482% faster)
reserve_array_insert,     vec3_value, size=100 x 1000    ax=   0.010, stl=   0.011, diff=   0.001 (  13.302% faster)
reserve_array_insert,     vec3_value, size=1000 x 100    ax=   0.075, stl=   0.084, diff=   0.010 (  11.565% faster)
reserve_array_insert,     vec3_value, size=10000 x 10    ax=   0.900, stl=   0.879, diff=  -0.021 (  -2.411% faster)
reserve_array_insert,     vec3_value, size=100000 x 1    ax=   9.142, stl=   8.823, diff=  -0.319 (  -3.616% faster)

string_array_append ,       sz_value, size=1 x 1000000    ax=   0.187, stl=   0.329, diff=   0.143 (  43.326% faster)
string_array_append ,       sz_value, size=10 x 100000    ax=   0.251, stl=   0.416, diff=   0.165 (  39.590% faster)
string_array_append ,       sz_value, size=100 x 10000    ax=   0.257, stl=   0.331, diff=   0.075 (  22.551% faster)
string_array_append ,       sz_value, size=1000 x 1000    ax=   0.287, stl=   0.308, diff=   0.022 (   7.057% faster)
string_array_append ,       sz_value, size=10000 x 100    ax=   0.295, stl=   0.346, diff=   0.050 (  14.509% faster)
string_array_append ,       sz_value, size=100000 x 10    ax=   0.419, stl=   0.514, diff=   0.095 (  18.539% faster)
string_array_append ,       sz_value, size=1000000 x 1    ax=   0.455, stl=   0.634, diff=   0.180 (  28.333% faster)

reserve_string_array_append,       sz_value, size=1 x 1000000    ax=   0.187, stl=   0.312, diff=   0.125 (  39.999% faster)
reserve_string_array_append,       sz_value, size=10 x 100000    ax=   0.253, stl=   0.247, diff=  -0.006 (  -2.608% faster)
reserve_string_array_append,       sz_value, size=100 x 10000    ax=   0.257, stl=   0.249, diff=  -0.008 (  -3.256% faster)
reserve_string_array_append,       sz_value, size=1000 x 1000    ax=   0.260, stl=   0.254, diff=  -0.006 (  -2.519% faster)
reserve_string_array_append,       sz_value, size=10000 x 100    ax=   0.254, stl=   0.248, diff=  -0.006 (  -2.242% faster)
reserve_string_array_append,       sz_value, size=100000 x 10    ax=   0.327, stl=   0.387, diff=   0.059 (  15.363% faster)
reserve_string_array_append,       sz_value, size=1000000 x 1    ax=   0.342, stl=   0.454, diff=   0.112 (  24.648% faster)

array_append        , int_array_value, size=1 x 1000000    ax=   0.134, stl=   0.167, diff=   0.033 (  19.754% faster)
array_append        , int_array_value, size=10 x 100000    ax=   0.197, stl=   0.500, diff=   0.303 (  60.667% faster)
array_append        , int_array_value, size=100 x 10000    ax=   0.224, stl=   0.476, diff=   0.252 (  52.857% faster)
array_append        , int_array_value, size=1000 x 1000    ax=   0.260, stl=   0.421, diff=   0.161 (  38.154% faster)
array_append        , int_array_value, size=10000 x 100    ax=   1.209, stl=   2.334, diff=   1.125 (  48.188% faster)
array_append        , int_array_value, size=100000 x 10    ax=   1.583, stl=   2.518, diff=   0.935 (  37.143% faster)
array_append        , int_array_value, size=1000000 x 1    ax=   1.946, stl=   2.772, diff=   0.826 (  29.809% faster)

reserve_array_append, int_array_value, size=1 x 1000000    ax=   0.133, stl=   0.170, diff=   0.037 (  21.667% faster)
reserve_array_append, int_array_value, size=10 x 100000    ax=   0.196, stl=   0.182, diff=  -0.014 (  -7.686% faster)
reserve_array_append, int_array_value, size=100 x 10000    ax=   0.226, stl=   0.192, diff=  -0.034 ( -17.597% faster)
reserve_array_append, int_array_value, size=1000 x 1000    ax=   0.220, stl=   0.193, diff=  -0.027 ( -14.137% faster)
reserve_array_append, int_array_value, size=10000 x 100    ax=   0.916, stl=   0.864, diff=  -0.052 (  -6.033% faster)
reserve_array_append, int_array_value, size=100000 x 10    ax=   1.029, stl=   0.935, diff=  -0.094 ( -10.001% faster)
reserve_array_append, int_array_value, size=1000000 x 1    ax=   1.644, stl=   1.430, diff=  -0.214 ( -14.972% faster)

array_insert        , int_array_value, size=1 x 10000    ax=   0.001, stl=   0.002, diff=   0.000 (  19.931% faster)
array_insert        , int_array_value, size=10 x 1000    ax=   0.003, stl=   0.006, diff=   0.004 (  60.684% faster)
array_insert        , int_array_value, size=100 x 100    ax=   0.007, stl=   0.038, diff=   0.031 (  81.971% faster)
array_insert        , int_array_value, size=1000 x 10    ax=   0.056, stl=   0.353, diff=   0.296 (  84.027% faster)
array_insert        , int_array_value, size=10000 x 1    ax=   0.535, stl=  19.384, diff=  18.849 (  97.238% faster)

reserve_array_insert, int_array_value, size=1 x 1000    ax=   0.000, stl=   0.000, diff=   0.000 (  23.204% faster)
reserve_array_insert, int_array_value, size=10 x 100    ax=   0.000, stl=   0.000, diff=   0.000 (  32.992% faster)
reserve_array_insert, int_array_value, size=100 x 10    ax=   0.001, stl=   0.004, diff=   0.003 (  80.581% faster)
reserve_array_insert, int_array_value, size=1000 x 1    ax=   0.005, stl=   0.037, diff=   0.031 (  85.478% faster)

==== return (0:OK) ====
