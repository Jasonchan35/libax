#ifndef __axExpandArgList_h__
#define __axExpandArgList_h__


/* !!!! 

This file generated by tools/axExpandArgList_generator.html ( java script ) 

*/


#include "ax_macro.h"



//! for 0 fixed parameter
#define axExpandArgList0( ReturnType, FuncName, Arg, ArgList ) \
ReturnType FuncName (  ) {\
  ArgList list; list; \
  return axMakeName2(FuncName, _ArgList)( list ); \
} \
ReturnType FuncName ( Arg a0 ) {\
  ArgList list; list<<a0; \
  return axMakeName2(FuncName, _ArgList)( list ); \
} \
ReturnType FuncName ( Arg a0, Arg a1 ) {\
  ArgList list; list<<a0<<a1; \
  return axMakeName2(FuncName, _ArgList)( list ); \
} \
ReturnType FuncName ( Arg a0, Arg a1, Arg a2 ) {\
  ArgList list; list<<a0<<a1<<a2; \
  return axMakeName2(FuncName, _ArgList)( list ); \
} \
ReturnType FuncName ( Arg a0, Arg a1, Arg a2, Arg a3 ) {\
  ArgList list; list<<a0<<a1<<a2<<a3; \
  return axMakeName2(FuncName, _ArgList)( list ); \
} \
ReturnType FuncName ( Arg a0, Arg a1, Arg a2, Arg a3, Arg a4 ) {\
  ArgList list; list<<a0<<a1<<a2<<a3<<a4; \
  return axMakeName2(FuncName, _ArgList)( list ); \
} \
ReturnType FuncName ( Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5 ) {\
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5; \
  return axMakeName2(FuncName, _ArgList)( list ); \
} \
ReturnType FuncName ( Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6 ) {\
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6; \
  return axMakeName2(FuncName, _ArgList)( list ); \
} \
ReturnType FuncName ( Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6, Arg a7 ) {\
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6<<a7; \
  return axMakeName2(FuncName, _ArgList)( list ); \
} \
ReturnType FuncName ( Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6, Arg a7, Arg a8 ) {\
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6<<a7<<a8; \
  return axMakeName2(FuncName, _ArgList)( list ); \
} \
ReturnType FuncName ( Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6, Arg a7, Arg a8, Arg a9 ) {\
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6<<a7<<a8<<a9; \
  return axMakeName2(FuncName, _ArgList)( list ); \
} \
ReturnType FuncName ( Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6, Arg a7, Arg a8, Arg a9, Arg a10 ) {\
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6<<a7<<a8<<a9<<a10; \
  return axMakeName2(FuncName, _ArgList)( list ); \
} \
ReturnType FuncName ( Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6, Arg a7, Arg a8, Arg a9, Arg a10, Arg a11 ) {\
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6<<a7<<a8<<a9<<a10<<a11; \
  return axMakeName2(FuncName, _ArgList)( list ); \
} \
ReturnType FuncName ( Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6, Arg a7, Arg a8, Arg a9, Arg a10, Arg a11, Arg a12 ) {\
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6<<a7<<a8<<a9<<a10<<a11<<a12; \
  return axMakeName2(FuncName, _ArgList)( list ); \
} \
ReturnType FuncName ( Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6, Arg a7, Arg a8, Arg a9, Arg a10, Arg a11, Arg a12, Arg a13 ) {\
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6<<a7<<a8<<a9<<a10<<a11<<a12<<a13; \
  return axMakeName2(FuncName, _ArgList)( list ); \
} \
ReturnType FuncName ( Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6, Arg a7, Arg a8, Arg a9, Arg a10, Arg a11, Arg a12, Arg a13, Arg a14 ) {\
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6<<a7<<a8<<a9<<a10<<a11<<a12<<a13<<a14; \
  return axMakeName2(FuncName, _ArgList)( list ); \
} \
ReturnType FuncName ( Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6, Arg a7, Arg a8, Arg a9, Arg a10, Arg a11, Arg a12, Arg a13, Arg a14, Arg a15 ) {\
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6<<a7<<a8<<a9<<a10<<a11<<a12<<a13<<a14<<a15; \
  return axMakeName2(FuncName, _ArgList)( list ); \
} \
//---- End Macro ---



//! for 1 fixed parameter
#define axExpandArgList1( ReturnType, FuncName, Fixed0, Arg, ArgList ) \
ReturnType FuncName ( Fixed0 f0 ) {\
  ArgList list; list; \
  return axMakeName2(FuncName, _ArgList)( f0, list ); \
} \
ReturnType FuncName ( Fixed0 f0, Arg a0 ) {\
  ArgList list; list<<a0; \
  return axMakeName2(FuncName, _ArgList)( f0, list ); \
} \
ReturnType FuncName ( Fixed0 f0, Arg a0, Arg a1 ) {\
  ArgList list; list<<a0<<a1; \
  return axMakeName2(FuncName, _ArgList)( f0, list ); \
} \
ReturnType FuncName ( Fixed0 f0, Arg a0, Arg a1, Arg a2 ) {\
  ArgList list; list<<a0<<a1<<a2; \
  return axMakeName2(FuncName, _ArgList)( f0, list ); \
} \
ReturnType FuncName ( Fixed0 f0, Arg a0, Arg a1, Arg a2, Arg a3 ) {\
  ArgList list; list<<a0<<a1<<a2<<a3; \
  return axMakeName2(FuncName, _ArgList)( f0, list ); \
} \
ReturnType FuncName ( Fixed0 f0, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4 ) {\
  ArgList list; list<<a0<<a1<<a2<<a3<<a4; \
  return axMakeName2(FuncName, _ArgList)( f0, list ); \
} \
ReturnType FuncName ( Fixed0 f0, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5 ) {\
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5; \
  return axMakeName2(FuncName, _ArgList)( f0, list ); \
} \
ReturnType FuncName ( Fixed0 f0, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6 ) {\
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6; \
  return axMakeName2(FuncName, _ArgList)( f0, list ); \
} \
ReturnType FuncName ( Fixed0 f0, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6, Arg a7 ) {\
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6<<a7; \
  return axMakeName2(FuncName, _ArgList)( f0, list ); \
} \
ReturnType FuncName ( Fixed0 f0, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6, Arg a7, Arg a8 ) {\
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6<<a7<<a8; \
  return axMakeName2(FuncName, _ArgList)( f0, list ); \
} \
ReturnType FuncName ( Fixed0 f0, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6, Arg a7, Arg a8, Arg a9 ) {\
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6<<a7<<a8<<a9; \
  return axMakeName2(FuncName, _ArgList)( f0, list ); \
} \
ReturnType FuncName ( Fixed0 f0, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6, Arg a7, Arg a8, Arg a9, Arg a10 ) {\
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6<<a7<<a8<<a9<<a10; \
  return axMakeName2(FuncName, _ArgList)( f0, list ); \
} \
ReturnType FuncName ( Fixed0 f0, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6, Arg a7, Arg a8, Arg a9, Arg a10, Arg a11 ) {\
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6<<a7<<a8<<a9<<a10<<a11; \
  return axMakeName2(FuncName, _ArgList)( f0, list ); \
} \
ReturnType FuncName ( Fixed0 f0, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6, Arg a7, Arg a8, Arg a9, Arg a10, Arg a11, Arg a12 ) {\
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6<<a7<<a8<<a9<<a10<<a11<<a12; \
  return axMakeName2(FuncName, _ArgList)( f0, list ); \
} \
ReturnType FuncName ( Fixed0 f0, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6, Arg a7, Arg a8, Arg a9, Arg a10, Arg a11, Arg a12, Arg a13 ) {\
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6<<a7<<a8<<a9<<a10<<a11<<a12<<a13; \
  return axMakeName2(FuncName, _ArgList)( f0, list ); \
} \
ReturnType FuncName ( Fixed0 f0, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6, Arg a7, Arg a8, Arg a9, Arg a10, Arg a11, Arg a12, Arg a13, Arg a14 ) {\
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6<<a7<<a8<<a9<<a10<<a11<<a12<<a13<<a14; \
  return axMakeName2(FuncName, _ArgList)( f0, list ); \
} \
ReturnType FuncName ( Fixed0 f0, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6, Arg a7, Arg a8, Arg a9, Arg a10, Arg a11, Arg a12, Arg a13, Arg a14, Arg a15 ) {\
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6<<a7<<a8<<a9<<a10<<a11<<a12<<a13<<a14<<a15; \
  return axMakeName2(FuncName, _ArgList)( f0, list ); \
} \
//---- End Macro ---



//! for 2 fixed parameter
#define axExpandArgList2( ReturnType, FuncName, Fixed0, Fixed1, Arg, ArgList ) \
ReturnType FuncName ( Fixed0 f0, Fixed1 f1 ) {\
  ArgList list; list; \
  return axMakeName2(FuncName, _ArgList)( f0, f1, list ); \
} \
ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Arg a0 ) {\
  ArgList list; list<<a0; \
  return axMakeName2(FuncName, _ArgList)( f0, f1, list ); \
} \
ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Arg a0, Arg a1 ) {\
  ArgList list; list<<a0<<a1; \
  return axMakeName2(FuncName, _ArgList)( f0, f1, list ); \
} \
ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Arg a0, Arg a1, Arg a2 ) {\
  ArgList list; list<<a0<<a1<<a2; \
  return axMakeName2(FuncName, _ArgList)( f0, f1, list ); \
} \
ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Arg a0, Arg a1, Arg a2, Arg a3 ) {\
  ArgList list; list<<a0<<a1<<a2<<a3; \
  return axMakeName2(FuncName, _ArgList)( f0, f1, list ); \
} \
ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4 ) {\
  ArgList list; list<<a0<<a1<<a2<<a3<<a4; \
  return axMakeName2(FuncName, _ArgList)( f0, f1, list ); \
} \
ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5 ) {\
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5; \
  return axMakeName2(FuncName, _ArgList)( f0, f1, list ); \
} \
ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6 ) {\
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6; \
  return axMakeName2(FuncName, _ArgList)( f0, f1, list ); \
} \
ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6, Arg a7 ) {\
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6<<a7; \
  return axMakeName2(FuncName, _ArgList)( f0, f1, list ); \
} \
ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6, Arg a7, Arg a8 ) {\
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6<<a7<<a8; \
  return axMakeName2(FuncName, _ArgList)( f0, f1, list ); \
} \
ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6, Arg a7, Arg a8, Arg a9 ) {\
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6<<a7<<a8<<a9; \
  return axMakeName2(FuncName, _ArgList)( f0, f1, list ); \
} \
ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6, Arg a7, Arg a8, Arg a9, Arg a10 ) {\
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6<<a7<<a8<<a9<<a10; \
  return axMakeName2(FuncName, _ArgList)( f0, f1, list ); \
} \
ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6, Arg a7, Arg a8, Arg a9, Arg a10, Arg a11 ) {\
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6<<a7<<a8<<a9<<a10<<a11; \
  return axMakeName2(FuncName, _ArgList)( f0, f1, list ); \
} \
ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6, Arg a7, Arg a8, Arg a9, Arg a10, Arg a11, Arg a12 ) {\
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6<<a7<<a8<<a9<<a10<<a11<<a12; \
  return axMakeName2(FuncName, _ArgList)( f0, f1, list ); \
} \
ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6, Arg a7, Arg a8, Arg a9, Arg a10, Arg a11, Arg a12, Arg a13 ) {\
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6<<a7<<a8<<a9<<a10<<a11<<a12<<a13; \
  return axMakeName2(FuncName, _ArgList)( f0, f1, list ); \
} \
ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6, Arg a7, Arg a8, Arg a9, Arg a10, Arg a11, Arg a12, Arg a13, Arg a14 ) {\
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6<<a7<<a8<<a9<<a10<<a11<<a12<<a13<<a14; \
  return axMakeName2(FuncName, _ArgList)( f0, f1, list ); \
} \
ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6, Arg a7, Arg a8, Arg a9, Arg a10, Arg a11, Arg a12, Arg a13, Arg a14, Arg a15 ) {\
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6<<a7<<a8<<a9<<a10<<a11<<a12<<a13<<a14<<a15; \
  return axMakeName2(FuncName, _ArgList)( f0, f1, list ); \
} \
//---- End Macro ---



//! axLog for defualt Tag
#define axLogExpandArgListStdTag( ReturnType, FuncName, Fixed0, Arg, ArgList ) \
ReturnType FuncName ( Fixed0 f0 ) {\
  if( !axLog_StdTag::instance->isEnable() ) return 0; \
  ArgList list; list; \
  return axMakeName2(FuncName, _ArgList)( f0, list ); \
} \
ReturnType FuncName ( Fixed0 f0, Arg a0 ) {\
  if( !axLog_StdTag::instance->isEnable() ) return 0; \
  ArgList list; list<<a0; \
  return axMakeName2(FuncName, _ArgList)( f0, list ); \
} \
ReturnType FuncName ( Fixed0 f0, Arg a0, Arg a1 ) {\
  if( !axLog_StdTag::instance->isEnable() ) return 0; \
  ArgList list; list<<a0<<a1; \
  return axMakeName2(FuncName, _ArgList)( f0, list ); \
} \
ReturnType FuncName ( Fixed0 f0, Arg a0, Arg a1, Arg a2 ) {\
  if( !axLog_StdTag::instance->isEnable() ) return 0; \
  ArgList list; list<<a0<<a1<<a2; \
  return axMakeName2(FuncName, _ArgList)( f0, list ); \
} \
ReturnType FuncName ( Fixed0 f0, Arg a0, Arg a1, Arg a2, Arg a3 ) {\
  if( !axLog_StdTag::instance->isEnable() ) return 0; \
  ArgList list; list<<a0<<a1<<a2<<a3; \
  return axMakeName2(FuncName, _ArgList)( f0, list ); \
} \
ReturnType FuncName ( Fixed0 f0, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4 ) {\
  if( !axLog_StdTag::instance->isEnable() ) return 0; \
  ArgList list; list<<a0<<a1<<a2<<a3<<a4; \
  return axMakeName2(FuncName, _ArgList)( f0, list ); \
} \
ReturnType FuncName ( Fixed0 f0, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5 ) {\
  if( !axLog_StdTag::instance->isEnable() ) return 0; \
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5; \
  return axMakeName2(FuncName, _ArgList)( f0, list ); \
} \
ReturnType FuncName ( Fixed0 f0, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6 ) {\
  if( !axLog_StdTag::instance->isEnable() ) return 0; \
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6; \
  return axMakeName2(FuncName, _ArgList)( f0, list ); \
} \
ReturnType FuncName ( Fixed0 f0, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6, Arg a7 ) {\
  if( !axLog_StdTag::instance->isEnable() ) return 0; \
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6<<a7; \
  return axMakeName2(FuncName, _ArgList)( f0, list ); \
} \
ReturnType FuncName ( Fixed0 f0, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6, Arg a7, Arg a8 ) {\
  if( !axLog_StdTag::instance->isEnable() ) return 0; \
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6<<a7<<a8; \
  return axMakeName2(FuncName, _ArgList)( f0, list ); \
} \
ReturnType FuncName ( Fixed0 f0, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6, Arg a7, Arg a8, Arg a9 ) {\
  if( !axLog_StdTag::instance->isEnable() ) return 0; \
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6<<a7<<a8<<a9; \
  return axMakeName2(FuncName, _ArgList)( f0, list ); \
} \
ReturnType FuncName ( Fixed0 f0, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6, Arg a7, Arg a8, Arg a9, Arg a10 ) {\
  if( !axLog_StdTag::instance->isEnable() ) return 0; \
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6<<a7<<a8<<a9<<a10; \
  return axMakeName2(FuncName, _ArgList)( f0, list ); \
} \
ReturnType FuncName ( Fixed0 f0, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6, Arg a7, Arg a8, Arg a9, Arg a10, Arg a11 ) {\
  if( !axLog_StdTag::instance->isEnable() ) return 0; \
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6<<a7<<a8<<a9<<a10<<a11; \
  return axMakeName2(FuncName, _ArgList)( f0, list ); \
} \
ReturnType FuncName ( Fixed0 f0, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6, Arg a7, Arg a8, Arg a9, Arg a10, Arg a11, Arg a12 ) {\
  if( !axLog_StdTag::instance->isEnable() ) return 0; \
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6<<a7<<a8<<a9<<a10<<a11<<a12; \
  return axMakeName2(FuncName, _ArgList)( f0, list ); \
} \
ReturnType FuncName ( Fixed0 f0, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6, Arg a7, Arg a8, Arg a9, Arg a10, Arg a11, Arg a12, Arg a13 ) {\
  if( !axLog_StdTag::instance->isEnable() ) return 0; \
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6<<a7<<a8<<a9<<a10<<a11<<a12<<a13; \
  return axMakeName2(FuncName, _ArgList)( f0, list ); \
} \
ReturnType FuncName ( Fixed0 f0, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6, Arg a7, Arg a8, Arg a9, Arg a10, Arg a11, Arg a12, Arg a13, Arg a14 ) {\
  if( !axLog_StdTag::instance->isEnable() ) return 0; \
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6<<a7<<a8<<a9<<a10<<a11<<a12<<a13<<a14; \
  return axMakeName2(FuncName, _ArgList)( f0, list ); \
} \
ReturnType FuncName ( Fixed0 f0, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6, Arg a7, Arg a8, Arg a9, Arg a10, Arg a11, Arg a12, Arg a13, Arg a14, Arg a15 ) {\
  if( !axLog_StdTag::instance->isEnable() ) return 0; \
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6<<a7<<a8<<a9<<a10<<a11<<a12<<a13<<a14<<a15; \
  return axMakeName2(FuncName, _ArgList)( f0, list ); \
} \
//---- End Macro ---



//! axLog for defualt Tag
#define axLogExpandArgListStdTag2( ReturnType, FuncName, Fixed0, Fixed1, Arg, ArgList ) \
ReturnType FuncName ( Fixed0 f0, Fixed1 f1 ) {\
  if( !axLog_StdTag::instance->isEnable() ) return 0; \
  ArgList list; list; \
  return axMakeName2(FuncName, _ArgList)( f0, f1, list ); \
} \
ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Arg a0 ) {\
  if( !axLog_StdTag::instance->isEnable() ) return 0; \
  ArgList list; list<<a0; \
  return axMakeName2(FuncName, _ArgList)( f0, f1, list ); \
} \
ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Arg a0, Arg a1 ) {\
  if( !axLog_StdTag::instance->isEnable() ) return 0; \
  ArgList list; list<<a0<<a1; \
  return axMakeName2(FuncName, _ArgList)( f0, f1, list ); \
} \
ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Arg a0, Arg a1, Arg a2 ) {\
  if( !axLog_StdTag::instance->isEnable() ) return 0; \
  ArgList list; list<<a0<<a1<<a2; \
  return axMakeName2(FuncName, _ArgList)( f0, f1, list ); \
} \
ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Arg a0, Arg a1, Arg a2, Arg a3 ) {\
  if( !axLog_StdTag::instance->isEnable() ) return 0; \
  ArgList list; list<<a0<<a1<<a2<<a3; \
  return axMakeName2(FuncName, _ArgList)( f0, f1, list ); \
} \
ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4 ) {\
  if( !axLog_StdTag::instance->isEnable() ) return 0; \
  ArgList list; list<<a0<<a1<<a2<<a3<<a4; \
  return axMakeName2(FuncName, _ArgList)( f0, f1, list ); \
} \
ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5 ) {\
  if( !axLog_StdTag::instance->isEnable() ) return 0; \
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5; \
  return axMakeName2(FuncName, _ArgList)( f0, f1, list ); \
} \
ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6 ) {\
  if( !axLog_StdTag::instance->isEnable() ) return 0; \
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6; \
  return axMakeName2(FuncName, _ArgList)( f0, f1, list ); \
} \
ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6, Arg a7 ) {\
  if( !axLog_StdTag::instance->isEnable() ) return 0; \
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6<<a7; \
  return axMakeName2(FuncName, _ArgList)( f0, f1, list ); \
} \
ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6, Arg a7, Arg a8 ) {\
  if( !axLog_StdTag::instance->isEnable() ) return 0; \
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6<<a7<<a8; \
  return axMakeName2(FuncName, _ArgList)( f0, f1, list ); \
} \
ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6, Arg a7, Arg a8, Arg a9 ) {\
  if( !axLog_StdTag::instance->isEnable() ) return 0; \
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6<<a7<<a8<<a9; \
  return axMakeName2(FuncName, _ArgList)( f0, f1, list ); \
} \
ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6, Arg a7, Arg a8, Arg a9, Arg a10 ) {\
  if( !axLog_StdTag::instance->isEnable() ) return 0; \
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6<<a7<<a8<<a9<<a10; \
  return axMakeName2(FuncName, _ArgList)( f0, f1, list ); \
} \
ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6, Arg a7, Arg a8, Arg a9, Arg a10, Arg a11 ) {\
  if( !axLog_StdTag::instance->isEnable() ) return 0; \
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6<<a7<<a8<<a9<<a10<<a11; \
  return axMakeName2(FuncName, _ArgList)( f0, f1, list ); \
} \
ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6, Arg a7, Arg a8, Arg a9, Arg a10, Arg a11, Arg a12 ) {\
  if( !axLog_StdTag::instance->isEnable() ) return 0; \
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6<<a7<<a8<<a9<<a10<<a11<<a12; \
  return axMakeName2(FuncName, _ArgList)( f0, f1, list ); \
} \
ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6, Arg a7, Arg a8, Arg a9, Arg a10, Arg a11, Arg a12, Arg a13 ) {\
  if( !axLog_StdTag::instance->isEnable() ) return 0; \
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6<<a7<<a8<<a9<<a10<<a11<<a12<<a13; \
  return axMakeName2(FuncName, _ArgList)( f0, f1, list ); \
} \
ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6, Arg a7, Arg a8, Arg a9, Arg a10, Arg a11, Arg a12, Arg a13, Arg a14 ) {\
  if( !axLog_StdTag::instance->isEnable() ) return 0; \
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6<<a7<<a8<<a9<<a10<<a11<<a12<<a13<<a14; \
  return axMakeName2(FuncName, _ArgList)( f0, f1, list ); \
} \
ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6, Arg a7, Arg a8, Arg a9, Arg a10, Arg a11, Arg a12, Arg a13, Arg a14, Arg a15 ) {\
  if( !axLog_StdTag::instance->isEnable() ) return 0; \
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6<<a7<<a8<<a9<<a10<<a11<<a12<<a13<<a14<<a15; \
  return axMakeName2(FuncName, _ArgList)( f0, f1, list ); \
} \
//---- End Macro ---



//! axLog for user Tag
#define axLogExpandArgListUserTag( ReturnType, FuncName, Tag, Fixed0, Arg, ArgList ) \
ReturnType FuncName ( Tag tag, Fixed0 f0 ) {\
  if( !tag.isEnable() ) return 0; \
  ArgList list; list; \
  return axMakeName2(FuncName, _ArgList)( tag, f0, list ); \
} \
ReturnType FuncName ( Tag tag, Fixed0 f0, Arg a0 ) {\
  if( !tag.isEnable() ) return 0; \
  ArgList list; list<<a0; \
  return axMakeName2(FuncName, _ArgList)( tag, f0, list ); \
} \
ReturnType FuncName ( Tag tag, Fixed0 f0, Arg a0, Arg a1 ) {\
  if( !tag.isEnable() ) return 0; \
  ArgList list; list<<a0<<a1; \
  return axMakeName2(FuncName, _ArgList)( tag, f0, list ); \
} \
ReturnType FuncName ( Tag tag, Fixed0 f0, Arg a0, Arg a1, Arg a2 ) {\
  if( !tag.isEnable() ) return 0; \
  ArgList list; list<<a0<<a1<<a2; \
  return axMakeName2(FuncName, _ArgList)( tag, f0, list ); \
} \
ReturnType FuncName ( Tag tag, Fixed0 f0, Arg a0, Arg a1, Arg a2, Arg a3 ) {\
  if( !tag.isEnable() ) return 0; \
  ArgList list; list<<a0<<a1<<a2<<a3; \
  return axMakeName2(FuncName, _ArgList)( tag, f0, list ); \
} \
ReturnType FuncName ( Tag tag, Fixed0 f0, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4 ) {\
  if( !tag.isEnable() ) return 0; \
  ArgList list; list<<a0<<a1<<a2<<a3<<a4; \
  return axMakeName2(FuncName, _ArgList)( tag, f0, list ); \
} \
ReturnType FuncName ( Tag tag, Fixed0 f0, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5 ) {\
  if( !tag.isEnable() ) return 0; \
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5; \
  return axMakeName2(FuncName, _ArgList)( tag, f0, list ); \
} \
ReturnType FuncName ( Tag tag, Fixed0 f0, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6 ) {\
  if( !tag.isEnable() ) return 0; \
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6; \
  return axMakeName2(FuncName, _ArgList)( tag, f0, list ); \
} \
ReturnType FuncName ( Tag tag, Fixed0 f0, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6, Arg a7 ) {\
  if( !tag.isEnable() ) return 0; \
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6<<a7; \
  return axMakeName2(FuncName, _ArgList)( tag, f0, list ); \
} \
ReturnType FuncName ( Tag tag, Fixed0 f0, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6, Arg a7, Arg a8 ) {\
  if( !tag.isEnable() ) return 0; \
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6<<a7<<a8; \
  return axMakeName2(FuncName, _ArgList)( tag, f0, list ); \
} \
ReturnType FuncName ( Tag tag, Fixed0 f0, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6, Arg a7, Arg a8, Arg a9 ) {\
  if( !tag.isEnable() ) return 0; \
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6<<a7<<a8<<a9; \
  return axMakeName2(FuncName, _ArgList)( tag, f0, list ); \
} \
ReturnType FuncName ( Tag tag, Fixed0 f0, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6, Arg a7, Arg a8, Arg a9, Arg a10 ) {\
  if( !tag.isEnable() ) return 0; \
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6<<a7<<a8<<a9<<a10; \
  return axMakeName2(FuncName, _ArgList)( tag, f0, list ); \
} \
ReturnType FuncName ( Tag tag, Fixed0 f0, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6, Arg a7, Arg a8, Arg a9, Arg a10, Arg a11 ) {\
  if( !tag.isEnable() ) return 0; \
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6<<a7<<a8<<a9<<a10<<a11; \
  return axMakeName2(FuncName, _ArgList)( tag, f0, list ); \
} \
ReturnType FuncName ( Tag tag, Fixed0 f0, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6, Arg a7, Arg a8, Arg a9, Arg a10, Arg a11, Arg a12 ) {\
  if( !tag.isEnable() ) return 0; \
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6<<a7<<a8<<a9<<a10<<a11<<a12; \
  return axMakeName2(FuncName, _ArgList)( tag, f0, list ); \
} \
ReturnType FuncName ( Tag tag, Fixed0 f0, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6, Arg a7, Arg a8, Arg a9, Arg a10, Arg a11, Arg a12, Arg a13 ) {\
  if( !tag.isEnable() ) return 0; \
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6<<a7<<a8<<a9<<a10<<a11<<a12<<a13; \
  return axMakeName2(FuncName, _ArgList)( tag, f0, list ); \
} \
ReturnType FuncName ( Tag tag, Fixed0 f0, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6, Arg a7, Arg a8, Arg a9, Arg a10, Arg a11, Arg a12, Arg a13, Arg a14 ) {\
  if( !tag.isEnable() ) return 0; \
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6<<a7<<a8<<a9<<a10<<a11<<a12<<a13<<a14; \
  return axMakeName2(FuncName, _ArgList)( tag, f0, list ); \
} \
ReturnType FuncName ( Tag tag, Fixed0 f0, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6, Arg a7, Arg a8, Arg a9, Arg a10, Arg a11, Arg a12, Arg a13, Arg a14, Arg a15 ) {\
  if( !tag.isEnable() ) return 0; \
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6<<a7<<a8<<a9<<a10<<a11<<a12<<a13<<a14<<a15; \
  return axMakeName2(FuncName, _ArgList)( tag, f0, list ); \
} \
//---- End Macro ---



//! axLog for user Tag
#define axLogExpandArgListUserTag2( ReturnType, FuncName, Tag, Fixed0, Fixed1, Arg, ArgList ) \
ReturnType FuncName ( Tag tag, Fixed0 f0, Fixed1 f1 ) {\
  if( !tag.isEnable() ) return 0; \
  ArgList list; list; \
  return axMakeName2(FuncName, _ArgList)( tag, f0, f1, list ); \
} \
ReturnType FuncName ( Tag tag, Fixed0 f0, Fixed1 f1, Arg a0 ) {\
  if( !tag.isEnable() ) return 0; \
  ArgList list; list<<a0; \
  return axMakeName2(FuncName, _ArgList)( tag, f0, f1, list ); \
} \
ReturnType FuncName ( Tag tag, Fixed0 f0, Fixed1 f1, Arg a0, Arg a1 ) {\
  if( !tag.isEnable() ) return 0; \
  ArgList list; list<<a0<<a1; \
  return axMakeName2(FuncName, _ArgList)( tag, f0, f1, list ); \
} \
ReturnType FuncName ( Tag tag, Fixed0 f0, Fixed1 f1, Arg a0, Arg a1, Arg a2 ) {\
  if( !tag.isEnable() ) return 0; \
  ArgList list; list<<a0<<a1<<a2; \
  return axMakeName2(FuncName, _ArgList)( tag, f0, f1, list ); \
} \
ReturnType FuncName ( Tag tag, Fixed0 f0, Fixed1 f1, Arg a0, Arg a1, Arg a2, Arg a3 ) {\
  if( !tag.isEnable() ) return 0; \
  ArgList list; list<<a0<<a1<<a2<<a3; \
  return axMakeName2(FuncName, _ArgList)( tag, f0, f1, list ); \
} \
ReturnType FuncName ( Tag tag, Fixed0 f0, Fixed1 f1, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4 ) {\
  if( !tag.isEnable() ) return 0; \
  ArgList list; list<<a0<<a1<<a2<<a3<<a4; \
  return axMakeName2(FuncName, _ArgList)( tag, f0, f1, list ); \
} \
ReturnType FuncName ( Tag tag, Fixed0 f0, Fixed1 f1, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5 ) {\
  if( !tag.isEnable() ) return 0; \
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5; \
  return axMakeName2(FuncName, _ArgList)( tag, f0, f1, list ); \
} \
ReturnType FuncName ( Tag tag, Fixed0 f0, Fixed1 f1, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6 ) {\
  if( !tag.isEnable() ) return 0; \
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6; \
  return axMakeName2(FuncName, _ArgList)( tag, f0, f1, list ); \
} \
ReturnType FuncName ( Tag tag, Fixed0 f0, Fixed1 f1, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6, Arg a7 ) {\
  if( !tag.isEnable() ) return 0; \
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6<<a7; \
  return axMakeName2(FuncName, _ArgList)( tag, f0, f1, list ); \
} \
ReturnType FuncName ( Tag tag, Fixed0 f0, Fixed1 f1, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6, Arg a7, Arg a8 ) {\
  if( !tag.isEnable() ) return 0; \
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6<<a7<<a8; \
  return axMakeName2(FuncName, _ArgList)( tag, f0, f1, list ); \
} \
ReturnType FuncName ( Tag tag, Fixed0 f0, Fixed1 f1, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6, Arg a7, Arg a8, Arg a9 ) {\
  if( !tag.isEnable() ) return 0; \
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6<<a7<<a8<<a9; \
  return axMakeName2(FuncName, _ArgList)( tag, f0, f1, list ); \
} \
ReturnType FuncName ( Tag tag, Fixed0 f0, Fixed1 f1, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6, Arg a7, Arg a8, Arg a9, Arg a10 ) {\
  if( !tag.isEnable() ) return 0; \
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6<<a7<<a8<<a9<<a10; \
  return axMakeName2(FuncName, _ArgList)( tag, f0, f1, list ); \
} \
ReturnType FuncName ( Tag tag, Fixed0 f0, Fixed1 f1, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6, Arg a7, Arg a8, Arg a9, Arg a10, Arg a11 ) {\
  if( !tag.isEnable() ) return 0; \
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6<<a7<<a8<<a9<<a10<<a11; \
  return axMakeName2(FuncName, _ArgList)( tag, f0, f1, list ); \
} \
ReturnType FuncName ( Tag tag, Fixed0 f0, Fixed1 f1, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6, Arg a7, Arg a8, Arg a9, Arg a10, Arg a11, Arg a12 ) {\
  if( !tag.isEnable() ) return 0; \
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6<<a7<<a8<<a9<<a10<<a11<<a12; \
  return axMakeName2(FuncName, _ArgList)( tag, f0, f1, list ); \
} \
ReturnType FuncName ( Tag tag, Fixed0 f0, Fixed1 f1, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6, Arg a7, Arg a8, Arg a9, Arg a10, Arg a11, Arg a12, Arg a13 ) {\
  if( !tag.isEnable() ) return 0; \
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6<<a7<<a8<<a9<<a10<<a11<<a12<<a13; \
  return axMakeName2(FuncName, _ArgList)( tag, f0, f1, list ); \
} \
ReturnType FuncName ( Tag tag, Fixed0 f0, Fixed1 f1, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6, Arg a7, Arg a8, Arg a9, Arg a10, Arg a11, Arg a12, Arg a13, Arg a14 ) {\
  if( !tag.isEnable() ) return 0; \
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6<<a7<<a8<<a9<<a10<<a11<<a12<<a13<<a14; \
  return axMakeName2(FuncName, _ArgList)( tag, f0, f1, list ); \
} \
ReturnType FuncName ( Tag tag, Fixed0 f0, Fixed1 f1, Arg a0, Arg a1, Arg a2, Arg a3, Arg a4, Arg a5, Arg a6, Arg a7, Arg a8, Arg a9, Arg a10, Arg a11, Arg a12, Arg a13, Arg a14, Arg a15 ) {\
  if( !tag.isEnable() ) return 0; \
  ArgList list; list<<a0<<a1<<a2<<a3<<a4<<a5<<a6<<a7<<a8<<a9<<a10<<a11<<a12<<a13<<a14<<a15; \
  return axMakeName2(FuncName, _ArgList)( tag, f0, f1, list ); \
} \
//---- End Macro ---





#endif //__axExpandArgList_h__
